//
// Project_Shared.xcconfig
//
// Generated by BuildSettingExtractor on 1/11/17
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

CBL_VERSION_STRING                 = 2.0DB009

IPHONEOS_DEPLOYMENT_TARGET         = 9.0
MACOSX_DEPLOYMENT_TARGET           = 10.11
TVOS_DEPLOYMENT_TARGET             = 9.0

CODE_SIGN_IDENTITY                 =

ONLY_ACTIVE_ARCH                   = NO
SKIP_INSTALL                       = YES
SUPPORTED_PLATFORMS                = macosx iphoneos iphonesimulator appletvos appletvsimulator
TARGETED_DEVICE_FAMILY             = 1,2
VALID_ARCHS                        = arm64 armv7 armv7a x86_64 i386

ALWAYS_SEARCH_USER_PATHS           = NO

CLANG_CXX_LANGUAGE_STANDARD        = gnu++0x
CLANG_CXX_LIBRARY                  = libc++
CLANG_ENABLE_MODULES               = YES
CLANG_ENABLE_OBJC_ARC              = YES

COPY_PHASE_STRIP                   = NO

DEVELOPMENT_TEAM                   = 

ENABLE_STRICT_OBJC_MSGSEND         = YES

GCC_C_LANGUAGE_STANDARD            = gnu99
GCC_NO_COMMON_BLOCKS               = YES

SWIFT_VERSION = 3.0

VERSION_INFO_PREFIX                = 
VERSIONING_SYSTEM                  = apple-generic

// Warnings:
CLANG_ANALYZER_NONNULL                                     = YES
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING                     = YES
CLANG_WARN_BOOL_CONVERSION                                 = YES
CLANG_WARN_COMMA                                           = NO
CLANG_WARN_CONSTANT_CONVERSION                             = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE                           = YES_ERROR
CLANG_WARN__DUPLICATE_METHOD_MATCH                         = YES
CLANG_WARN_DOCUMENTATION_COMMENTS                          = YES
CLANG_WARN_EMPTY_BODY                                      = YES
CLANG_WARN_ENUM_CONVERSION                                 = YES
CLANG_WARN_INFINITE_RECURSION                              = YES
CLANG_WARN_INT_CONVERSION                                  = YES
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES                 = YES
CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS                 = YES
CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK                       = YES
CLANG_WARN_OBJC_ROOT_CLASS                                 = YES_ERROR
CLANG_WARN_RANGE_LOOP_ANALYSIS                             = YES
CLANG_WARN_STRICT_PROTOTYPES                               = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION                  = YES
CLANG_WARN_SUSPICIOUS_MOVE                                 = YES
CLANG_WARN_UNREACHABLE_CODE                                = YES
GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS         = YES
GCC_TREAT_WARNINGS_AS_ERRORS                               = YES
GCC_WARN_ABOUT_MISSING_PROTOTYPES                          = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS                        = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS[sdk=appletvos*]        = NO
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS[sdk=appletvsimulator*] = NO
GCC_WARN_ABOUT_RETURN_TYPE                                 = YES_ERROR
GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS                          = YES
GCC_WARN_NON_VIRTUAL_DESTRUCTOR                            = YES
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF                         = YES
GCC_WARN_UNUSED_VARIABLE                                   = YES
GCC_WARN_SIGN_COMPARE                                      = YES
GCC_WARN_64_TO_32_BIT_CONVERSION                           = YES
GCC_WARN_SHADOW                                            = YES
GCC_WARN_UNDECLARED_SELECTOR                               = YES
GCC_WARN_UNINITIALIZED_AUTOS                               = YES_AGGRESSIVE
GCC_WARN_UNUSED_FUNCTION                                   = YES
GCC_WARN_UNUSED_VARIABLE                                   = YES
WARNING_CFLAGS                                             = -Wall -Wformat-security -Wmissing-declarations -Woverriding-method-mismatch -Weffc++

// Sanitizer Behaviors:
CLANG_ADDRESS_SANITIZER_CONTAINER_OVERFLOW                 = YES    // range-check C++ STL containers
CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY             = YES

// Static Analyzer - Analysis Policy
RUN_CLANG_STATIC_ANALYZER                                  = YES // Run during 'Build' as well as 'Analyze'

// Static Analyzer - Generic Issues
CLANG_ANALYZER_DEADCODE_DEADSTORES                         = YES
CLANG_ANALYZER_MEMORY_MANAGEMENT                           = YES
CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED                 = YES
CLANG_ANALYZER_LOCALIZABILITY_EMPTY_CONTEXT                = YES
CLANG_ANALYZER_NONNULL                                     = YES
CLANG_ANALYZER_GCD                                         = YES

// Static Analyzer - Checks - Objective-C
CLANG_ANALYZER_OBJC_ATSYNC                                 = YES
CLANG_ANALYZER_OBJC_NSCFERROR                              = YES
CLANG_ANALYZER_OBJC_INCOMP_METHOD_TYPES                    = YES
CLANG_ANALYZER_OBJC_COLLECTIONS                            = YES
CLANG_ANALYZER_OBJC_GENERICS                               = YES
CLANG_ANALYZER_OBJC_UNUSED_IVARS                           = YES
CLANG_ANALYZER_OBJC_SELF_INIT                              = YES
CLANG_ANALYZER_OBJC_RETAIN_COUNT                           = YES

// Static Analyzer - Checks - Security
CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER                   = YES
CLANG_ANALYZER_SECURITY_KEYCHAIN_API                       = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN        = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS             = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP                = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND                   = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY                 = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK                  = YES
